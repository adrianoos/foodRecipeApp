{"version":3,"sources":["recipe.js","EmptyAnswer.js","App.js","index.js","recipe.module.css"],"names":["Recipe","title","calories","image","ingredients","type","time","link","country","infoLack","className","style","recipe","src","alt","map","ingredient","text","id","href","EmptyAnswer","App","useState","recipes","setRecipes","search","setSearch","query","setQuery","useEffect","getRecipes","a","fetch","response","json","data","hits","mappedRecipes","label","cuisineType","mealType","totalTime","Math","floor","url","classsName","onSubmit","e","preventDefault","value","onChange","target","length","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"qPAgCeA,EAtBA,SAAC,GAAsE,IAArEC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,QAClEC,EAAW,UAEjB,OACI,sBAAKC,UAAWC,IAAMC,OAAtB,UACI,qBAAKF,UAAWC,IAAMR,MAAOU,IAAKV,EAAOW,IAAI,KAC7C,6BAAKb,IACL,0CAAaO,GAAoBC,KACjC,6BAAKJ,IACL,2CAAcH,KACd,mDAAsBI,GAAcG,EAApC,WACA,4BAAG,oDACH,6BACKL,EAAYW,KAAI,SAAAC,GAAU,OACvB,6BAAKA,EAAWC,YAGxB,mBAAGC,GAAG,OAAOC,KAAMZ,EAAnB,4CCbOa,EAVK,WACpB,OACI,qBAAKV,UAAU,qBAAf,SACA,qBAAKA,UAAU,cAAf,SACI,iEC8DOW,EAjEH,WAEV,IAFgB,EAKeC,mBAAS,IALxB,mBAKTC,EALS,KAKCC,EALD,OAMYF,mBAAS,IANrB,mBAMTG,EANS,KAMDC,EANC,OAOUJ,mBAAS,WAPnB,mBAOTK,EAPS,KAOFC,EAPE,KASlBC,qBAAU,WACVC,MACG,CAACH,IAEJ,IAAMG,EAAU,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,mCAAD,OAAoCL,EAApC,mBAZb,WAYa,oBAXZ,qCAUC,cACXM,EADW,gBAEEA,EAASC,OAFX,OAEXC,EAFW,OAGjBX,EAAWW,EAAKC,MAHC,2CAAH,qDAkBVC,EAAgBd,EAAQR,KAAI,SAAAH,GAAM,OACtC,cAAC,EAAD,CAEAX,MAAOW,EAAOA,OAAO0B,MACrB9B,QAASI,EAAOA,OAAO2B,YACvBlC,KAAMO,EAAOA,OAAO4B,SACpBlC,KAAMM,EAAOA,OAAO6B,UACpBvC,SAAUwC,KAAKC,MAAM/B,EAAOA,OAAOV,UACnCC,MAAOS,EAAOA,OAAOT,MACrBC,YAAaQ,EAAOA,OAAOR,YAC3BG,KAAMK,EAAOA,OAAOgC,KARfhC,EAAOA,OAAO0B,UAYrB,OACA,sBAAKO,WAAW,MAAhB,UACE,qBAAKnC,UAAU,SAAf,SACE,oBAAIQ,GAAG,QAAP,wCAEF,uBAAMR,UAAU,cAAcoC,SA3Bd,SAACC,GACnBA,EAAEC,iBACa,KAAXvB,IACJG,EAASH,GACTC,EAAU,MAuBR,UACE,uBAAOhB,UAAU,aAAaQ,GAAG,YAAYb,KAAK,OAAO4C,MAAOxB,EAAQyB,SAhCvD,SAACH,GACtBrB,EAAUqB,EAAEI,OAAOF,UAiCf,wBAAQvC,UAAU,gBAAgBL,KAAK,SAAvC,uBAIF,qBAAKK,UAAU,UAAf,SACD2B,EAAce,OAASf,EAAgB,cAAC,EAAD,UCzDxCgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCT1BC,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,SAAW,4B","file":"static/js/main.3ec80093.chunk.js","sourcesContent":["import React from 'react';\r\nimport style from './recipe.module.css'\r\n\r\n// {} ten nawias jest destrukturyzacją wchodzących propsów\r\n// {title} w h1 jest referencją do przekazanego propsa\r\n// PEŁNE przekazanie danych z app JS:\r\n// W APP.js odczyt ze state zwróconej data\r\n// przypisanie propsa z odpowiednim tytułem w app.js do renderowanego obiektu\r\n// w komponencie destrukt w ({title}) i przypisanie w obiekcie html\r\n\r\nconst Recipe = ({title, calories, image, ingredients, type, time, link, country}) => {\r\nconst infoLack = 'unknown'\r\n\r\nreturn(\r\n    <div className={style.recipe}>\r\n        <img className={style.image} src={image} alt=''/>\r\n        <h1>{title}</h1>\r\n        <h2>Origin: {country ? country : infoLack}</h2>\r\n        <h3>{type}</h3>\r\n        <p>Calories: {calories}</p>\r\n        <p>Preparation Time: {time ? time : infoLack} mins</p>\r\n        <p><strong>Ingredients:</strong></p>\r\n        <ol>\r\n            {ingredients.map(ingredient => (\r\n                <li>{ingredient.text}</li>\r\n            ))}\r\n        </ol>\r\n        <a id='link' href={link}>- Full Recipe web source -</a>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default Recipe;","import React from 'react';\r\nimport './recipe.module.css'\r\n\r\n\r\nconst EmptyAnswer = () => {\r\nreturn(\r\n    <div className='emptyAnswerWrapper'>\r\n    <div className='emptyAnswer'>\r\n        <h1>No recipes for your search</h1>\r\n    </div>\r\n    </div>\r\n);\r\n};\r\n\r\nexport default EmptyAnswer;","import './App.css';\nimport React, {useEffect, useState} from 'react';\nimport Recipe from './recipe';\nimport EmptyAnswer from './EmptyAnswer'\n\nconst App = () => {\n\n  const APP_ID = 'e451a818'\n  const APP_KEY = '8ce698c0d34fad3edc134c896ef01f29'\n  \n  const [recipes , setRecipes] = useState([])\n  const [search, setSearch] = useState('')\n  const [query, setQuery] = useState('chicken')\n\nuseEffect(() => {\ngetRecipes()\n}, [query])\n\nconst getRecipes = async () => {\n  const response = await fetch(`https://api.edamam.com/search?q=${query}&app_id=${APP_ID}&app_key=${APP_KEY}`)\n  const data = await response.json()\n  setRecipes(data.hits)\n};\n\nconst updateSearch = (e) =>{\nsetSearch(e.target.value)\n};\n\nconst getSearch = (e) => {\ne.preventDefault()\nif (search !== ''){\nsetQuery(search)\nsetSearch('')\n}\n};\n\nconst mappedRecipes = recipes.map(recipe => (\n  <Recipe \n  key={recipe.recipe.label}\n  title={recipe.recipe.label}\n  country={recipe.recipe.cuisineType}\n  type={recipe.recipe.mealType}\n  time={recipe.recipe.totalTime}\n  calories={Math.floor(recipe.recipe.calories)}\n  image={recipe.recipe.image}\n  ingredients={recipe.recipe.ingredients}\n  link={recipe.recipe.url}\n  />\n))\n\nreturn (\n<div classsName='App'>\n  <div className='label1'>\n    <h1 id='text1'>Search for food recipes:</h1>\n  </div>\n  <form className='search-form' onSubmit={getSearch}>\n    <input className='search-bar' id='searchBar' type='text' value={search} onChange={updateSearch}>\n    </input>\n    <button className='search-button' type='submit'>\n    Search\n    </button>\n  </form>\n  <div className='recipes'>\n{mappedRecipes.length ? mappedRecipes : <EmptyAnswer />}\n</div>\n</div>\n);\n};\n\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recipe\":\"recipe_recipe__1DvQP\",\"image\":\"recipe_image__3Ausm\",\"infoLack\":\"recipe_infoLack__3rAHX\"};"],"sourceRoot":""}